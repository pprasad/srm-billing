/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.srm.services.standalone.controller;

import com.srm.services.config.ServiceConstant;
import com.srm.services.modal.Customer;
import com.srm.services.modal.HeaderSettings;
import com.srm.services.modal.Product;
import com.srm.services.modal.PurchaseStock;
import com.srm.services.modal.SalesBill;
import com.srm.services.modal.SalesBillStock;
import com.srm.services.modal.UnitType;
import com.srm.services.services.CustomerService;
import com.srm.services.services.HeaderService;
import com.srm.services.services.SalesBillService;
import com.srm.services.services.TradersService;
import com.srm.services.standalone.listeners.CustomerListener;
import com.srm.services.standalone.listeners.SalesBillInfoListener;
import com.srm.services.standalone.model.SalesBillTableModel;
import com.srm.services.standalone.model.UserInfoSession;
import com.srm.services.standalone.printer.BillReceiptView;
import com.srm.services.standalone.printer.PrinterOptions;
import com.srm.services.standalone.printer.PrinterService;
import com.srm.services.standalone.utils.StandaloneUtils;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JComponent;
import javax.swing.JList;
import javax.swing.KeyStroke;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;

/**
 *
 * @author umprasad
 */
public class SalesBillForm extends javax.swing.JFrame {

    /**
     * Creates new form SalesBillForm
     */
    public SalesBillForm() {
        initComponents();
        setModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        salesBillNoTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        salesBillDate = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        customerBoxAction = new javax.swing.JComboBox<>();
        newActionBtn = new javax.swing.JButton();
        saveActionBtn = new javax.swing.JButton();
        deleteActionBtn = new javax.swing.JButton();
        refreshActionBtn = new javax.swing.JButton();
        printerActionBtn = new javax.swing.JButton();
        jXImagePanel1 = new com.srm.components.JXImagePanel();
        jLabel4 = new javax.swing.JLabel();
        productBoxAction = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        unitPriceTxt = new com.srm.components.JxCurrencyTextField();
        jLabel6 = new javax.swing.JLabel();
        qtyTxt = new com.srm.components.JxNumberTextField();
        jLabel7 = new javax.swing.JLabel();
        amountTxt = new com.srm.components.JxCurrencyTextField();
        jLabel8 = new javax.swing.JLabel();
        unitsTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        discountTxt = new com.srm.components.JxNumberTextField();
        jLabel10 = new javax.swing.JLabel();
        netAmountTxt = new com.srm.components.JxCurrencyTextField();
        addActionBtn = new javax.swing.JButton();
        removeActionBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        salesBillTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        billNetAmtTxt = new com.srm.components.JxCurrencyTextField();
        jLabel12 = new javax.swing.JLabel();
        billDisTxt = new com.srm.components.JxNumberTextField();
        jLabel13 = new javax.swing.JLabel();
        billGstTxt = new com.srm.components.JxNumberTextField();
        jLabel14 = new javax.swing.JLabel();
        billTotalAmtTxt = new com.srm.components.JxCurrencyTextField();
        addCustomerAction = new javax.swing.JLabel();
        loadDataActionBtn = new javax.swing.JLabel();
        loadSalesDataAction = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bill Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Engravers MT", 1, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel1.setText("Invoice No");

        salesBillNoTxt.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel2.setText("Date");

        salesBillDate.setDate(new java.util.Date());
        salesBillDate.setDateFormatString("dd/mm/yyyy");
        salesBillDate.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel3.setText("Customer Name");

        newActionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/file.png"))); // NOI18N
        newActionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newActionBtnActionPerformed(evt);
            }
        });

        saveActionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        saveActionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionBtnActionPerformed(evt);
            }
        });

        deleteActionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/x-button_1.png"))); // NOI18N
        deleteActionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionBtnActionPerformed(evt);
            }
        });

        refreshActionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        refreshActionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionBtnActionPerformed(evt);
            }
        });

        printerActionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/printer-40.png"))); // NOI18N
        printerActionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printerActionBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(customerBoxAction, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(173, 173, 173)
                        .addComponent(newActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printerActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(salesBillNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(salesBillDate, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(salesBillDate, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(salesBillNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(customerBoxAction, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(newActionBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveActionBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteActionBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(refreshActionBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(printerActionBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jXImagePanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Stock In", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Elephant", 0, 18))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel4.setText("Item Name");

        productBoxAction.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                productBoxActionItemStateChanged(evt);
            }
        });
        productBoxAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productBoxActionActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel5.setText("Price");

        unitPriceTxt.setEditable(false);

        jLabel6.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel6.setText("Qty");

        qtyTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qtyTxtKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel7.setText("Amount");

        amountTxt.setEditable(false);
        amountTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amountTxtKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel8.setText("Units");

        unitsTxt.setEditable(false);

        jLabel9.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel9.setText("Dis(%)");

        discountTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                discountTxtKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel10.setText("Net Amount");

        netAmountTxt.setEditable(false);

        addActionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus_1.png"))); // NOI18N
        addActionBtn.setEnabled(false);
        addActionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionBtnActionPerformed(evt);
            }
        });

        removeActionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/x-button_1.png"))); // NOI18N
        removeActionBtn.setEnabled(false);
        removeActionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionBtnActionPerformed(evt);
            }
        });

        salesBillTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(salesBillTable);

        jLabel11.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel11.setText("Net Amount");

        jLabel12.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel12.setText("Discount (%)");

        billDisTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                billDisTxtKeyReleased(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel13.setText("GST (%)");

        billGstTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                billGstTxtKeyReleased(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel14.setText("Total Amount");

        addCustomerAction.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        addCustomerAction.setText("<html><a href=\"\">F2 Adding Customers</a></html>");
        addCustomerAction.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addCustomerAction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addCustomerActionMouseClicked(evt);
            }
        });

        loadDataActionBtn.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        loadDataActionBtn.setText("<html><a href=\"\">F3 Loading Data</a></html>");
        loadDataActionBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        loadSalesDataAction.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        loadSalesDataAction.setText("<html><a href=\"\">F4 Sales Bill</a></html>");
        loadSalesDataAction.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jXImagePanel1Layout = new javax.swing.GroupLayout(jXImagePanel1);
        jXImagePanel1.setLayout(jXImagePanel1Layout);
        jXImagePanel1Layout.setHorizontalGroup(
            jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXImagePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productBoxAction, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(unitPriceTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(qtyTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unitsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(amountTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(discountTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(netAmountTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addComponent(addActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1517, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXImagePanel1Layout.createSequentialGroup()
                .addComponent(addCustomerAction, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadDataActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(loadSalesDataAction, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(104, 104, 104)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(billNetAmtTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(billDisTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXImagePanel1Layout.createSequentialGroup()
                .addGap(1268, 1280, Short.MAX_VALUE)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(billTotalAmtTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(billGstTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jXImagePanel1Layout.setVerticalGroup(
            jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXImagePanel1Layout.createSequentialGroup()
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jXImagePanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(netAmountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jXImagePanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(discountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jXImagePanel1Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(amountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jXImagePanel1Layout.createSequentialGroup()
                            .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel8))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(productBoxAction, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(unitPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(qtyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(unitsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(addActionBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(billNetAmtTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCustomerAction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadDataActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadSalesDataAction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(billDisTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(billGstTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(billTotalAmtTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jXImagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXImagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void productBoxActionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_productBoxActionItemStateChanged
        if(productBoxAction.getSelectedIndex()!=0 && productBoxAction.getSelectedIndex()!=-1){
            seleStock=(PurchaseStock)productBoxAction.getSelectedItem();
            if(seleStock.getSalesQty()!=null && seleStock.getSalesQty().intValue()!=0){
                unitPriceTxt.setValue(seleStock.getUnitPrice());
                UnitType unitType=seleStock.getUnitType();
                if(unitType!=null){
                    unitsTxt.setText(unitType.getUnitId());
                }
                if(seleStock.getUnitDiscount().intValue()!=0){
                    discountTxt.setValue(seleStock.getUnitDiscount());
                }
            }     
        }
    }//GEN-LAST:event_productBoxActionItemStateChanged

    private void amountTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountTxtKeyReleased
       try{
             
       }catch(Exception ex){
           
       }
    }//GEN-LAST:event_amountTxtKeyReleased

    private void qtyTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyTxtKeyReleased
       try{
           if(qtyTxt.getInt()>0 && (seleStock.getSalesQty().intValue()>=qtyTxt.getInt())){
                Double amount=unitPriceTxt.getDouble()*qtyTxt.getInt();
                amountTxt.setValue(amount);
                amount=amount-((discountTxt.getInt()*amount)/100);
                netAmountTxt.setValue(amount);
                if(salesBill.getBillNo()!=null){
                    addActionBtn.setEnabled(true);
                }
           }else{
               addActionBtn.setEnabled(false);
               StandaloneUtils.dialogBox("Available Qty "+seleStock.getSalesQty(),rootPane);
           }
        }catch(Exception ex){
           
       }
    }//GEN-LAST:event_qtyTxtKeyReleased

    private void discountTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountTxtKeyReleased
         try{
               Double amount=amountTxt.getDouble();
               amount=amount-((discountTxt.getInt()*amount)/100);
               netAmountTxt.setValue(amount);
         }catch(Exception ex){
             
         }
    }//GEN-LAST:event_discountTxtKeyReleased

    private void addActionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionBtnActionPerformed
        try{
            if(seleStock!=null){
                SalesBillStock salesBillStock=new SalesBillStock();
                salesBillStock.setProduct(seleStock.getProduct());
                salesBillStock.setPrice(unitPriceTxt.getDouble());
                salesBillStock.setQty(qtyTxt.getInt());
                salesBillStock.setUnitType(seleStock.getUnitType());
                salesBillStock.setAmount(amountTxt.getDouble());
                salesBillStock.setDiscount(discountTxt.getInt());
                salesBillStock.setNetAmount(netAmountTxt.getDouble());
                salesBillStock.setSalesBillNo(salesBill.getBillNo());
                salesBillStock.setRefStockId(seleStock.getId());
                salesBillTableModel.addRow(salesBillStock);
                clearStockIn();
            }
        }catch(Exception ex){
            
        }
    }//GEN-LAST:event_addActionBtnActionPerformed

    private void removeActionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionBtnActionPerformed
        int row=salesBillTable.getSelectedRow();
       try{ 
            LOGGER.info("Selected row{}",row);
            if(row!=-1){
                SalesBillStock salesBillStock=salesBillTableModel.getRow(row);
                if(salesBillStock!=null && salesBillStock.getId()!=null){
                    salesBillService.delete(salesBillStock);
                    PurchaseStock purchaseStock=tradersService.findById(salesBillStock.getRefStockId());
                    if(purchaseStock!=null){
                       Integer qty=salesBillStock.getQty();
                       if(purchaseStock.getSalesQty()!=null){
                            qty=purchaseStock.getSalesQty()-qty;
                       }
                       purchaseStock.setSalesQty(qty);
                       tradersService.save(purchaseStock);
                   }
                }
                salesBillTableModel.removeRow(row);
            }
       }catch(Exception ex){
           StandaloneUtils.dialogBox(ServiceConstant.ERROR_MSG_RECORD, rootPane);
       }
    }//GEN-LAST:event_removeActionBtnActionPerformed

    private void billDisTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_billDisTxtKeyReleased
        
       calGstAndDis();
    }//GEN-LAST:event_billDisTxtKeyReleased

    private void billGstTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_billGstTxtKeyReleased
       calGstAndDis();
    }//GEN-LAST:event_billGstTxtKeyReleased

    private void addCustomerActionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCustomerActionMouseClicked
        
    }//GEN-LAST:event_addCustomerActionMouseClicked

    private void newActionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newActionBtnActionPerformed
        clear();
    }//GEN-LAST:event_newActionBtnActionPerformed
    private void clear(){
        salesBillNoTxt.setText("");
        salesBillDate.setDate(new Date());
        comboBoxModel.setSelectedItem(ServiceConstant.DEFAULT_VALUE);
        salesBillTableModel.removeAll();
        billNetAmtTxt.clear();
        billDisTxt.clear();
        billGstTxt.clear();
        billTotalAmtTxt.clear();
        salesBill=null;
        seleStock=null;
        clearStockIn();
       
    }
    private void clearStockIn(){
        unitPriceTxt.clear();
        qtyTxt.clear();
        unitsTxt.setText("");
        netAmountTxt.clear();
        discountTxt.clear();
        amountTxt.clear();
        loadProduct();
    }
    private void saveActionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionBtnActionPerformed
        try{
            boolean flage=false;
            int index=customerBoxAction.getSelectedIndex();
            LOGGER.info("Selected{} Index{}",customerBoxAction.getSelectedItem(),index);
            if(!ServiceConstant.DEFAULT_VALUE.equals(customerBoxAction.getSelectedItem())){
                if(salesBill==null){
                    salesBill=new SalesBill();
                }
                Customer customer=(Customer)customerBoxAction.getSelectedItem();
                LOGGER.info("Customer{}",customer.getName());
                salesBill.setCustomer(customer);
                salesBill.setBillDate(salesBillDate.getDate());
                salesBill.setNetAmount(billNetAmtTxt.getDouble());
                salesBill.setDiscount(billDisTxt.getInt());
                salesBill.setGstTax(billGstTxt.getInt());
                salesBill.setAmount(billTotalAmtTxt.getDouble());
                if(salesBill.getBillNo()==null){
                    salesBill=salesBillService.save(salesBill);
                    salesBillNoTxt.setText(salesBill.getBillNo());
                    StandaloneUtils.dialogBox(ServiceConstant.ACTION_SAVE, rootPane);
                }else{
                   salesBillService.update(salesBill);
                   List<SalesBillStock> salesBillStocks=salesBillTableModel.getRows();
                   if(salesBillStocks!=null){
                       salesBillService.updateStock(salesBillStocks);
                       landingForm.updateStockDetails(salesBillStocks,true);
                   }
                   StandaloneUtils.dialogBox(ServiceConstant.ACTION_UPDATE, rootPane);
                }
                addActionBtn.setEnabled(true);
                removeActionBtn.setEnabled(true);
            }else{
                StandaloneUtils.dialogBox(ServiceConstant.ERROR_MSG_CUSTOMER, rootPane);
            }
        }catch(Exception ex){
            LOGGER.error("Exception{}",ex);
            StandaloneUtils.dialogBox(ServiceConstant.TECHNICAL_ERROR_MSG, rootPane);
        }
    }//GEN-LAST:event_saveActionBtnActionPerformed
     
    private void deleteActionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionBtnActionPerformed
       try{
           if(this.salesBill!=null){
               List<SalesBillStock> salesBillStocks=salesBillService.findAllStock(this.salesBill.getBillNo());
               if(salesBillStocks!=null && !salesBillStocks.isEmpty()){
                   salesBillService.deleteStock(salesBillStocks);
                   landingForm.updateStockDetails(salesBillStocks,false);
               }
               salesBillService.delete(this.salesBill);
               StandaloneUtils.dialogBox(ServiceConstant.ACTION_DELETE, rootPane);
               clear();
           }
       }catch(Exception ex){
           LOGGER.error("Exception{}",ex);
           StandaloneUtils.dialogBox(ServiceConstant.TECHNICAL_ERROR_MSG, rootPane);
       }
    }//GEN-LAST:event_deleteActionBtnActionPerformed

    private void refreshActionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionBtnActionPerformed
         clear();
    }//GEN-LAST:event_refreshActionBtnActionPerformed

    private void productBoxActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productBoxActionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productBoxActionActionPerformed

    private void printerActionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printerActionBtnActionPerformed
        try{ 
            HeaderSettings headerSettings=headerService.findByDefaultValue(ServiceConstant.DEFAULT_USE_YES);
            if(headerSettings!=null && salesBill!=null){
                salesBill.setSalesBillStock(salesBillService.findAllStock(salesBill.getBillNo()));
                PrinterOptions  printerOptions=new PrinterOptions();
                printerOptions.resetAll();
                printerOptions.initialize();
                printerOptions.feedBack((byte)2);
                printerOptions.alignCenter();
                printerOptions.setText(StringUtils.center(headerSettings.getCompanyName(),23));
                printerOptions.newLine();
                printerOptions.chooseFont(4);
                String address=headerSettings.getAddress();
                if(!StringUtils.isEmpty(address) && !StringUtils.isEmpty(headerSettings.getAddressSub())){
                    address=address.concat(headerSettings.getAddressSub());
                }
                if(!StringUtils.isEmpty(address)){
                    printerOptions.setText(headerSettings.getAddress().concat(headerSettings.getAddressSub()));
                    printerOptions.newLine();
                }
                printerOptions.addLineSeperator();
                printerOptions.newLine();
                printerOptions.alignLeft();
                printerOptions.setText("Bill No.,\t:"+salesBill.getBillNo());
                printerOptions.newLine();
                printerOptions.setText("Res Date\t:"+StandaloneUtils.getSystemDate());
                printerOptions.newLine();
                printerOptions.setText("Staff \t:"+userInfoSession.getDisplayName());
                printerOptions.newLine();
                printerOptions.addLineSeperator();
                printerOptions.newLine();
                String header=String.format("%s%s%s%s%s%n",
                        StringUtils.center("SrNo.,",2),
                        StringUtils.center("Item",10),
                        StringUtils.center("Price",10),StringUtils.center("Qty",6),StringUtils.center("Amt",9));
                printerOptions.setText(header);
                printerOptions.newLine();
                printerOptions.addLineSeperator();
                printerOptions.newLine();
                String body=null;Integer i=0;
                for(SalesBillStock salesBillStock:salesBill.getSalesBillStock()){
                     i=i+1;
                     body=String.format("%s%s%s%s%s%n",
                        StringUtils.center(i.toString(),2),
                        StringUtils.center(salesBillStock.getProduct().getProdName(),10),
                        StringUtils.center(salesBillStock.getPrice().toString(),10),
                        StringUtils.center(salesBillStock.getQty().toString(),6),
                        StringUtils.center(salesBillStock.getNetAmount().toString(),9));
                      printerOptions.setText(body);
                      printerOptions.newLine();
                } 
                printerOptions.addLineSeperator();
                printerOptions.newLine();
                printerOptions.alignRight();
                printerOptions.setText("Net Amount\t:"+salesBill.getNetAmount());
                printerOptions.newLine();
                printerOptions.setText("Discount\t:"+salesBill.getDiscount()+"%");
                printerOptions.newLine();
                printerOptions.setText("Gst Tax\t:"+salesBill.getGstTax()+"%");
                printerOptions.newLine();
                printerOptions.setText("Amount\t:"+salesBill.getAmount());
                printerOptions.newLine();
                printerOptions.addLineSeperator();
                printerOptions.newLine();
                printerOptions.setText(StringUtils.center("****Thank You,Please Visit Again****",23));
                printerOptions.feed((byte)4);
                printerService.printString(printerService.DEFAULT_PRINTER,printerOptions.finalCommandSet());
            }
        }catch(Exception ex){
             LOGGER.error("Excpetion{}",ex);
        }
    }//GEN-LAST:event_printerActionBtnActionPerformed
   private void calGstAndDis(){
       Double amount=billNetAmtTxt.getDouble();
       amount=amount-((billDisTxt.getInt()*amount)/100);
       amount=amount+((billGstTxt.getInt()*amount)/100);
       billTotalAmtTxt.setValue(amount);
   }
   private void setModel(){
        salesBillTableModel=new SalesBillTableModel();
        salesBillTable.setModel(salesBillTableModel);
        addCustomerAction.registerKeyboardAction(addCustomerListener,KeyStroke.getKeyStroke("F2"),JComponent.WHEN_IN_FOCUSED_WINDOW);
        loadDataActionBtn.registerKeyboardAction(loadDataListener,KeyStroke.getKeyStroke("F3"),JComponent.WHEN_IN_FOCUSED_WINDOW);
        loadSalesDataAction.registerKeyboardAction(exisBillInfoListener,KeyStroke.getKeyStroke("F4"),JComponent.WHEN_IN_FOCUSED_WINDOW);
        comboBoxModel=new DefaultComboBoxModel<>();
        customerBoxAction.setModel(comboBoxModel);
        customerBoxAction.setRenderer(new DefaultListCellRenderer(){
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                if(value instanceof Customer){
                    Customer aCustomer=(Customer)value;
                    setText(aCustomer.getName());
                }else{
                    setText(value!=null?value.toString():null);
                }
                return this;
            }
            
        });
        productBoxModel=new DefaultComboBoxModel<>();
        productBoxAction.setModel(productBoxModel);
        productBoxAction.setRenderer(new DefaultListCellRenderer(){
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                if(value instanceof PurchaseStock){
                    PurchaseStock aObject=(PurchaseStock)value;
                    Product product=aObject.getProduct();
                    if(product!=null){
                       setText(product.getProdName());
                    }
                }else{
                    setText(value!=null?value.toString():null);
                }
                return this;
            }
            
        });
        salesBillTableModel.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                  if(TableModelEvent.INSERT==e.getType()||TableModelEvent.DELETE==e.getType()){
                      billNetAmtTxt.setValue(getSum());
                      calGstAndDis(); 
                  }
                 
            } 
        });
  
    }
    @PostConstruct
    private void loadCustomerDetails(){
         customerBoxAction.removeAllItems();
         List<Customer> customers=customerService.findAllCustomers();
         comboBoxModel.addElement(ServiceConstant.DEFAULT_VALUE);
         if(customers!=null){
              customers.forEach(customer->comboBoxModel.addElement(customer));
         }
         if(salesBill!=null){
            Customer customer=this.salesBill.getCustomer();
            if(customer!=null){
                comboBoxModel.setSelectedItem(customer);
            }
         }
    }
    private void loadProduct(){
        productBoxAction.removeAllItems();
        List<PurchaseStock> purchaseStocks=tradersService.findByIsTransferAndDelete(true,false);
        productBoxModel.addElement(ServiceConstant.DEFAULT_VALUE);
        if(purchaseStocks!=null){
            purchaseStocks.forEach(purchase->productBoxModel.addElement(purchase));
        }
    }
    private void viewBillInfo(SalesBill salesBill){
        this.salesBill=salesBill;
        if(this.salesBill!=null){
            salesBillNoTxt.setText(this.salesBill.getBillNo());
            Customer customer=this.salesBill.getCustomer();
            if(customer!=null){
                comboBoxModel.setSelectedItem(customer);
                //customerBoxAction.setSelectedItem(customer);
            }
            salesBillDate.setDate(this.salesBill.getBillDate());
            billNetAmtTxt.setValue(this.salesBill.getNetAmount());
            billDisTxt.setValue(this.salesBill.getDiscount());
            billGstTxt.setValue(this.salesBill.getGstTax());
            billTotalAmtTxt.setValue(this.salesBill.getNetAmount());
            List<SalesBillStock> salesBillStocks=salesBillService.findAllStock(this.salesBill.getBillNo());
            if(salesBillStocks!=null){
                salesBillTableModel.removeAll();
                salesBillTableModel.addRows(salesBillStocks);
            }
            addActionBtn.setEnabled(true);
            removeActionBtn.setEnabled(true);
        }
    }
    private final ActionListener addCustomerListener=new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            customerForm.loadData();
            customerForm.setCustomerListener(customerListener);
            StandaloneUtils.setScreenCenter(customerForm, rootPane);
        }
    };
    private final CustomerListener customerListener=new CustomerListener() {
        @Override
        public void update(Customer customer) {
            loadCustomerDetails();
        }
          
    };
    private final ActionListener exisBillInfoListener=new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            salesBillInfoForm.loadData();
            if(salesBillInfoForm.getSalesBillInfoListener()==null){
                salesBillInfoForm.setSalesBillInfoListener(salesBillInfoListener);
            }
            StandaloneUtils.setScreenCenter(salesBillInfoForm,rootPane);
        }
    };
    private ActionListener loadDataListener=new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            loadCustomerDetails();
            loadProduct();
        }

    };
    private Double getSum(){
        Double totalAmt=0d;
        List<SalesBillStock> salesBillStocks=salesBillTableModel.getRows();
        if(salesBillStocks!=null){
            totalAmt=salesBillStocks.stream().mapToDouble(salesBill->salesBill.getNetAmount()).sum();
        }
        return totalAmt;
    }
    private final SalesBillInfoListener salesBillInfoListener=new SalesBillInfoListener() {
        @Override
        public void viewData(SalesBill salesBillInfo) {
            viewBillInfo(salesBillInfo);
       }
              
    };
    @Autowired private CustomerService customerService;
    @Autowired private CustomerForm customerForm;
    @Autowired private TradersService tradersService;
    @Autowired private SalesBillService salesBillService;
    @Autowired private SalesBillInfoForm salesBillInfoForm;
    @Autowired private LandingForm landingForm;
    @Autowired private HeaderService headerService;
    @Autowired private UserInfoSession userInfoSession;
    private SalesBillTableModel salesBillTableModel;
    private DefaultComboBoxModel<Object> comboBoxModel;
    private DefaultComboBoxModel<Object> productBoxModel;
    private PurchaseStock seleStock;
    private SalesBill salesBill;
    private final PrinterService printerService=new PrinterService();
    private final static Logger LOGGER=LoggerFactory.getLogger(SalesBillForm.class);
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addActionBtn;
    private javax.swing.JLabel addCustomerAction;
    private com.srm.components.JxCurrencyTextField amountTxt;
    private com.srm.components.JxNumberTextField billDisTxt;
    private com.srm.components.JxNumberTextField billGstTxt;
    private com.srm.components.JxCurrencyTextField billNetAmtTxt;
    private com.srm.components.JxCurrencyTextField billTotalAmtTxt;
    private javax.swing.JComboBox<Object> customerBoxAction;
    private javax.swing.JButton deleteActionBtn;
    private com.srm.components.JxNumberTextField discountTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.srm.components.JXImagePanel jXImagePanel1;
    private javax.swing.JLabel loadDataActionBtn;
    private javax.swing.JLabel loadSalesDataAction;
    private com.srm.components.JxCurrencyTextField netAmountTxt;
    private javax.swing.JButton newActionBtn;
    private javax.swing.JButton printerActionBtn;
    private javax.swing.JComboBox<Object> productBoxAction;
    private com.srm.components.JxNumberTextField qtyTxt;
    private javax.swing.JButton refreshActionBtn;
    private javax.swing.JButton removeActionBtn;
    private com.toedter.calendar.JDateChooser salesBillDate;
    private javax.swing.JTextField salesBillNoTxt;
    private javax.swing.JTable salesBillTable;
    private javax.swing.JButton saveActionBtn;
    private com.srm.components.JxCurrencyTextField unitPriceTxt;
    private javax.swing.JTextField unitsTxt;
    // End of variables declaration//GEN-END:variables
}
