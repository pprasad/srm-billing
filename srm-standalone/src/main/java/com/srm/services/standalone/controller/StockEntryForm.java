/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.srm.services.standalone.controller;

import com.mongodb.gridfs.GridFSDBFile;
import com.srm.services.config.ServiceConstant;
import com.srm.services.modal.Product;
import com.srm.services.modal.PurchaseStock;
import com.srm.services.modal.Traders;
import com.srm.services.modal.UnitType;
import com.srm.services.services.SaveImageService;
import com.srm.services.services.TradersService;
import com.srm.services.services.UnitTypeService;
import com.srm.services.standalone.model.PurchaseTableModel;
import com.srm.services.standalone.utils.StandaloneUtils;
import com.srm.services.standalone.utils.TableFilter;
import java.awt.Component;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JList;
import org.omg.IOP.ServiceContext;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.gridfs.GridFsOperations;

/**
 *
 * @author umprasad
 */
public class StockEntryForm extends javax.swing.JDialog {

    /**
     * Creates new form StockEntryForm
     */
    public StockEntryForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setModal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jXImagePanel2 = new com.srm.components.JXImagePanel();
        jLabel2 = new javax.swing.JLabel();
        itemCodeTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        itemNameTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        priceTxt = new com.srm.components.JxCurrencyTextField();
        jLabel5 = new javax.swing.JLabel();
        qtyTxt = new com.srm.components.JxNumberTextField();
        jLabel6 = new javax.swing.JLabel();
        unitPriceTxt = new com.srm.components.JxCurrencyTextField();
        jLabel7 = new javax.swing.JLabel();
        unitTypeBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        discountTxt = new com.srm.components.JxNumberTextField();
        imagePanel = new com.srm.components.JXImagePanel();
        jLabel10 = new javax.swing.JLabel();
        uploadActionBtn = new javax.swing.JButton();
        saveActionBtn = new javax.swing.JButton();
        refreshActionBtn = new javax.swing.JButton();
        jXImagePanel1 = new com.srm.components.JXImagePanel();
        jLabel9 = new javax.swing.JLabel();
        searchfilterTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        stockinTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Stock Entry");

        jXImagePanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jXImagePanel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/app-background.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel2.setText("Item Code");

        itemCodeTxt.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel3.setText("Item Name");

        itemNameTxt.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel4.setText("Price");

        jLabel5.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel5.setText("Unit Price");

        jLabel6.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel6.setText("Qty");

        jLabel7.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel7.setText("Unit Type");

        jLabel8.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel8.setText("Discount");

        imagePanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel10.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel10.setText("Image Upload");

        uploadActionBtn.setFont(new java.awt.Font("Elephant", 0, 14)); // NOI18N
        uploadActionBtn.setText("Upload");
        uploadActionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadActionBtnActionPerformed(evt);
            }
        });

        saveActionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        saveActionBtn.setText("Save");
        saveActionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionBtnActionPerformed(evt);
            }
        });

        refreshActionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        refreshActionBtn.setText("Refresh");
        refreshActionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jXImagePanel2Layout = new javax.swing.GroupLayout(jXImagePanel2);
        jXImagePanel2.setLayout(jXImagePanel2Layout);
        jXImagePanel2Layout.setHorizontalGroup(
            jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXImagePanel2Layout.createSequentialGroup()
                .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jXImagePanel2Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXImagePanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(26, 26, 26))
                                .addGroup(jXImagePanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(70, 70, 70)))
                            .addGroup(jXImagePanel2Layout.createSequentialGroup()
                                .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8))
                                .addGap(25, 25, 25)))
                        .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(itemCodeTxt)
                                .addComponent(priceTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                                .addComponent(unitPriceTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(discountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jXImagePanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(saveActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(refreshActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(77, 77, 77)
                .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(uploadActionBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47)
                .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(qtyTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemNameTxt)
                    .addComponent(unitTypeBox, 0, 294, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jXImagePanel2Layout.setVerticalGroup(
            jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXImagePanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(itemCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(itemNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(priceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qtyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(32, 32, 32)
                .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(unitPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(unitTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jXImagePanel2Layout.createSequentialGroup()
                        .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(discountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jXImagePanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(uploadActionBtn))
                            .addGroup(jXImagePanel2Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jXImagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(saveActionBtn)
                                    .addComponent(refreshActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 50, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jXImagePanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Stock In", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Elephant", 0, 18))); // NOI18N
        jXImagePanel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/app-background.png"))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel9.setText("Filter");

        stockinTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        stockinTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockinTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(stockinTable);

        javax.swing.GroupLayout jXImagePanel1Layout = new javax.swing.GroupLayout(jXImagePanel1);
        jXImagePanel1.setLayout(jXImagePanel1Layout);
        jXImagePanel1Layout.setHorizontalGroup(
            jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXImagePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 973, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jXImagePanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(39, 39, 39)
                        .addComponent(searchfilterTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jXImagePanel1Layout.setVerticalGroup(
            jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXImagePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(searchfilterTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXImagePanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jXImagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jXImagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXImagePanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void uploadActionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadActionBtnActionPerformed
        byte[] images=null;
        try{
            jFileChooser1=new JFileChooser();
            jFileChooser1.showOpenDialog(this);
            selectedImage=jFileChooser1.getSelectedFile();
            if(jFileChooser1.isFileSelectionEnabled()){
                if(selectedImage!=null && selectedImage.isFile()){
                    LOGGER.info("Image Path{}",selectedImage.getPath());
                    BufferedImage buffImage=ImageIO.read(selectedImage);
                    ByteArrayOutputStream outputStream=new ByteArrayOutputStream();
                    ImageIO.write(buffImage,"png",outputStream);
                    images=outputStream.toByteArray();
                    imageIcon=new ImageIcon(images);
                    LOGGER.info("ImageIcon{}",imageIcon.getIconWidth());
                    imagePanel.setIcon(imageIcon);
                    imagePanel.repaint();
                }
            }
        }catch(Exception ex){
            
        }
        
    }//GEN-LAST:event_uploadActionBtnActionPerformed

    private void stockinTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockinTableMouseClicked
       int row=stockinTable.getSelectedRow();
       try{
            if(row!=-1){
                PurchaseStock purchaseStock=purchaseTableModel.getRow(row);
                seleObj=purchaseStock;
                Product product=purchaseStock.getProduct();
                itemCodeTxt.setText(product.getProdCode());
                itemNameTxt.setText(product.getProdName());
                priceTxt.setValue(purchaseStock.getPrice());
                qtyTxt.setValue(purchaseStock.getQty());
                unitPriceTxt.setValue(purchaseStock.getUnitPrice()!=null?purchaseStock.getUnitPrice():0d);
                UnitType unitType=purchaseStock.getUnitType();
                if(unitType!=null){
                    unitTypeBoxModel.setSelectedItem(unitType);
                }
                discountTxt.setValue(purchaseStock.getUnitDiscount());
                if(purchaseStock.getImageId()!=null){
                     ByteArrayOutputStream outputStream=new ByteArrayOutputStream();
                     GridFSDBFile gfsdbf=imageService.findImageById(purchaseStock.getImageId());
                     gfsdbf.writeTo(outputStream);
                     byte[] images=outputStream.toByteArray();
                     imageIcon=new ImageIcon(images);
                     LOGGER.info("ImageIcon{}",imageIcon.getIconWidth());
                     imagePanel.setIcon(imageIcon);
                     imagePanel.repaint();
               }
           }
       }catch(Exception ex){
           LOGGER.error("Excpetion{}",ex);
       }
    }//GEN-LAST:event_stockinTableMouseClicked

    private void saveActionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionBtnActionPerformed
        try{
             if(seleObj!=null){
                  seleObj.setUnitPrice(unitPriceTxt.getDouble());
                  UnitType unitType=(UnitType)unitTypeBox.getSelectedItem();
                  if(unitType!=null){
                     seleObj.setUnitType(unitType);
                  }
                  seleObj.setUnitDiscount(discountTxt.getInt());
                  if(imageIcon!=null && selectedImage!=null){
                     String imageId=seleObj.getImageId();
                     if(imageId!=null){
                       imageService.deleteImage(imageId);
                     }
                     imageId=imageService.saveImage(selectedImage.getPath());
                     seleObj.setImageId(imageId);
                  }
                  seleObj.setIsTransfer(true);
                  tradersService.save(seleObj);
                  StandaloneUtils.dialogBox(ServiceConstant.ACTION_SAVE, rootPane);
             }
        }catch(Exception ex){
             StandaloneUtils.dialogBox(ServiceConstant.TECHNICAL_ERROR_MSG, rootPane);
        }
    }//GEN-LAST:event_saveActionBtnActionPerformed

    private void refreshActionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionBtnActionPerformed
        clear();
        load();
    }//GEN-LAST:event_refreshActionBtnActionPerformed
    private void setModal(){
        unitTypeBoxModel=new DefaultComboBoxModel<Object>();
        unitTypeBox.setModel(unitTypeBoxModel);
        purchaseTableModel=new PurchaseTableModel();
        purchaseTableModel.setIsObject(Boolean.FALSE);
        stockinTable.setModel(purchaseTableModel);
        TableFilter tableFilter=new TableFilter(stockinTable,searchfilterTxt);
        tableFilter.applyFilter();
        unitTypeBox.setRenderer(new DefaultListCellRenderer(){
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                if(value instanceof UnitType){
                    UnitType aUnitType=(UnitType)value;
                    setText(aUnitType.getDescription());
                }else{
                    setText(value!=null?value.toString():null);
                }
                return this;
            }
            
        });
    }
    public void clear(){
        itemCodeTxt.setText("");
        itemNameTxt.setText("");
        priceTxt.clear();
        qtyTxt.clear();
        unitPriceTxt.clear();
        discountTxt.clear();
        unitTypeBox.setSelectedItem(ServiceConstant.DEFAULT_VALUE);
        imagePanel.setIcon(null);
        imagePanel.repaint();
    }
    public void load(){
        purchaseTableModel.removeRows();
        unitTypeBox.removeAllItems();
        List<PurchaseStock> purchaseStocks=tradersService.findByDelete(false);
        if(purchaseStocks!=null){
            purchaseTableModel.addRows(purchaseStocks);
        }
        List<UnitType> unitTypes=unitTypeService.findAllUnitTypes();
        unitTypeBoxModel.addElement(ServiceConstant.DEFAULT_VALUE);
        if(unitTypes!=null){
            unitTypes.forEach(unitType->unitTypeBoxModel.addElement(unitType));
        }
        
    }
    @Autowired private TradersService tradersService;
    @Autowired private UnitTypeService unitTypeService;
    @Autowired private SaveImageService imageService;
    private File selectedImage;
    private PurchaseTableModel purchaseTableModel;
    private DefaultComboBoxModel<Object> unitTypeBoxModel;
    private PurchaseStock seleObj;
    private ImageIcon imageIcon;
    private final static Logger LOGGER=LoggerFactory.getLogger(StockEntryForm.class);
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.srm.components.JxNumberTextField discountTxt;
    private com.srm.components.JXImagePanel imagePanel;
    private javax.swing.JTextField itemCodeTxt;
    private javax.swing.JTextField itemNameTxt;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.srm.components.JXImagePanel jXImagePanel1;
    private com.srm.components.JXImagePanel jXImagePanel2;
    private com.srm.components.JxCurrencyTextField priceTxt;
    private com.srm.components.JxNumberTextField qtyTxt;
    private javax.swing.JButton refreshActionBtn;
    private javax.swing.JButton saveActionBtn;
    private javax.swing.JTextField searchfilterTxt;
    private javax.swing.JTable stockinTable;
    private com.srm.components.JxCurrencyTextField unitPriceTxt;
    private javax.swing.JComboBox unitTypeBox;
    private javax.swing.JButton uploadActionBtn;
    // End of variables declaration//GEN-END:variables
}
