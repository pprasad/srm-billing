/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.srm.services.standalone.controller;

import com.srm.services.config.ServiceConstant;
import com.srm.services.modal.UnitType;
import com.srm.services.services.UnitTypeService;
import com.srm.services.standalone.model.UnitTypeTableModel;
import com.srm.services.standalone.utils.StandaloneUtils;
import java.util.List;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.springframework.beans.factory.annotation.Autowired;

/**
 *
 * @author umprasad
 */
public class UnitTypeForm extends javax.swing.JDialog {

    /**
     * Creates new form UnitTypeForm
     */
    public UnitTypeForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXImagePanel1 = new com.srm.components.JXImagePanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        unitTypeTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        filterSearchTxt = new javax.swing.JTextField();
        addActionBtn = new javax.swing.JButton();
        saveActionBtn = new javax.swing.JButton();
        removeActionBtn = new javax.swing.JButton();
        refreshActionBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jXImagePanel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/app-background.png"))); // NOI18N

        unitTypeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        unitTypeTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(unitTypeTable);

        jLabel1.setFont(new java.awt.Font("Engravers MT", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        jLabel1.setText("Search");

        addActionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus_1.png"))); // NOI18N
        addActionBtn.setText("Add");
        addActionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionBtnActionPerformed(evt);
            }
        });

        saveActionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        saveActionBtn.setText("Save");
        saveActionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionBtnActionPerformed(evt);
            }
        });

        removeActionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/x-button_1.png"))); // NOI18N
        removeActionBtn.setText("Remove");
        removeActionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionBtnActionPerformed(evt);
            }
        });

        refreshActionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        refreshActionBtn.setText("Refresh");
        refreshActionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jXImagePanel1Layout = new javax.swing.GroupLayout(jXImagePanel1);
        jXImagePanel1.setLayout(jXImagePanel1Layout);
        jXImagePanel1Layout.setHorizontalGroup(
            jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXImagePanel1Layout.createSequentialGroup()
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jXImagePanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jXImagePanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
                            .addGroup(jXImagePanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filterSearchTxt)))))
                .addGap(33, 33, 33))
        );
        jXImagePanel1Layout.setVerticalGroup(
            jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXImagePanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(filterSearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshActionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 808, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jXImagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 607, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jXImagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionBtnActionPerformed
        unitTypeTableModel.addRow(new UnitType());
    }//GEN-LAST:event_addActionBtnActionPerformed
    private void saveActionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionBtnActionPerformed
        try{
            List<UnitType> tempTypes=unitTypeTableModel.getNewRows();
            if(unitTypeService.save(tempTypes)!=null){
                tempTypes.clear();
                StandaloneUtils.dialogBox(ServiceConstant.ACTION_SAVE,this);
            }
        }catch(Exception ex){
            StandaloneUtils.dialogBox(ServiceConstant.TECHNICAL_ERROR_MSG,this);
        }
    }//GEN-LAST:event_saveActionBtnActionPerformed
    private void removeActionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionBtnActionPerformed
        int row=unitTypeTable.getSelectedRow();
        if(row!=-1){
            UnitType unitType=unitTypeTableModel.getRow(row);
            unitTypeService.delete(unitType);
            unitTypeTableModel.removeRow(row);
            StandaloneUtils.dialogBox(ServiceConstant.ACTION_UPDATE,this);
        }
    }//GEN-LAST:event_removeActionBtnActionPerformed

    private void refreshActionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionBtnActionPerformed
        this.loadInitalData();
    }//GEN-LAST:event_refreshActionBtnActionPerformed
   private void setModel(){
        unitTypeTableModel=new UnitTypeTableModel();
        unitTypeTable.setModel(unitTypeTableModel);
        RowSorter<? extends TableModel> productTypeSorter=unitTypeTable.getRowSorter();
        if(productTypeSorter==null){
             unitTypeTable.setAutoCreateRowSorter(true);
             productTypeSorter=unitTypeTable.getRowSorter();
        }
        TableRowSorter<?extends TableModel> prodTypeSorter=
                (productTypeSorter instanceof TableRowSorter)?(TableRowSorter<? extends TableModel>)productTypeSorter:null;
       
        filterSearchTxt.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                update(e);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                update(e);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                update(e);
            }
            private void update(DocumentEvent e){
                String text=filterSearchTxt.getText();
                if(text.trim().length()==0){
                    prodTypeSorter.setRowFilter(null);
                }else{
                    prodTypeSorter.setRowFilter(RowFilter.regexFilter("(?i)"+text));
                }
            }
        });
    }
    public void loadInitalData(){
        unitTypeTableModel.removeAll();
        List<UnitType> unitTypes=unitTypeService.findAllUnitTypes();
        unitTypeTableModel.addRows(unitTypes);
    }
    private UnitTypeTableModel unitTypeTableModel;
    @Autowired private UnitTypeService unitTypeService;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addActionBtn;
    private javax.swing.JTextField filterSearchTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.srm.components.JXImagePanel jXImagePanel1;
    private javax.swing.JButton refreshActionBtn;
    private javax.swing.JButton removeActionBtn;
    private javax.swing.JButton saveActionBtn;
    private javax.swing.JTable unitTypeTable;
    // End of variables declaration//GEN-END:variables
}
